########################################################
### Secret file - defined variables in encrypted way ###
########################################################


#A secret resource defined variables which can be passed to pods/container. 
#These variables must be encrypted! YOu can use lots of encrypment method. 

#An important note - Secret resource is just like ConfigMap in any way - the only difference is that the variables here I encrypted! 
  #Refering to Secret is just like refering to ConfigMap - just write Secret instead! ( see how I refered to both of them in the deployment resource at ./deployment/echo.yaml . ) 


#In my case, I am using the echo application which accepts the secret variable in base64 encryption. 
#Bash functions which I used to encrypt the variable in base64 encryption - 
  # echo "123" | base64
  # echo "encrypted data" | base64 --decode


---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.name }} #This is the name of the secret, which I will use to refer to it from the deployment resource definition. ( See ./deployment/echo.yml file ) 
  namespace: {{ .Values.namespace }} #The namespace which the object will be created at. 
type: Opaque
data:
  MONGODBURL: {{ .Values.secret.mongodburl | b64enc }} #This is the base64 encryption of - "mongodb://root:1234@mongodb:27017/echo" 

###The MONGODBURL is refering to the address http://mongodb/ - which is a reference to the headless service load balancer which I made in the file ./service/mongodb.yaml . 
  #When refering to this headless service - it will redirect the echo application to one of the pods running the Mongo database. 
  #The Mongo database is defined by a StatefulSet which creates pods running the databases. See the file ./statefulset/mongodb.yaml for more information! 
